{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ADMIN/Desktop/Little_Next/little_backend/src/app/utils/config/db.js"],"sourcesContent":["const { default: mongoose } = require(\"mongoose\")\r\n\r\n\r\nconst DBConnection = async()=>{\r\n    try {\r\n        await mongoose.connect(process.env.MONGO_URI);\r\n        console.log(\"Database Connected\")\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\n\r\nexport default DBConnection"],"names":[],"mappings":";;;AAAA,MAAM,EAAE,SAAS,QAAQ,EAAE;AAG3B,MAAM,eAAe;IACjB,IAAI;QACA,MAAM,SAAS,OAAO,CAAC,QAAQ,GAAG,CAAC,SAAS;QAC5C,QAAQ,GAAG,CAAC;IAChB,EAAE,OAAO,OAAO;QACZ,QAAQ,GAAG,CAAC;IAChB;AACJ;uCAEe"}},
    {"offset": {"line": 68, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 74, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ADMIN/Desktop/Little_Next/little_backend/src/app/utils/models/User.js"],"sourcesContent":["const { default: mongoose } = require(\"mongoose\");\r\n\r\n\r\nconst userSchema = new mongoose.Schema({\r\n    username:{\r\n        type: String,\r\n    }, \r\n    email:{\r\n        type:String\r\n    },\r\n    message:{\r\n        type:String,\r\n    }\r\n})\r\n\r\nconst UserModel = mongoose.models.user || mongoose.model('user', userSchema)\r\n\r\nexport default UserModel"],"names":[],"mappings":";;;AAAA,MAAM,EAAE,SAAS,QAAQ,EAAE;AAG3B,MAAM,aAAa,IAAI,SAAS,MAAM,CAAC;IACnC,UAAS;QACL,MAAM;IACV;IACA,OAAM;QACF,MAAK;IACT;IACA,SAAQ;QACJ,MAAK;IACT;AACJ;AAEA,MAAM,YAAY,SAAS,MAAM,CAAC,IAAI,IAAI,SAAS,KAAK,CAAC,QAAQ;uCAElD"}},
    {"offset": {"line": 91, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 105, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ADMIN/Desktop/Little_Next/little_backend/src/app/api/users/route.js"],"sourcesContent":["// app/api/users/route.js\r\n\r\nimport DBConnection from \"@/app/utils/config/db\";\r\nimport UserModel from \"@/app/utils/models/User\";\r\nimport { NextResponse } from \"next/server\";\r\n\r\n// Connect to the database\r\nconst ConnectDB = async () => {\r\n  try {\r\n    await DBConnection();\r\n    console.log(\"Database connected\");\r\n  } catch (error) {\r\n    console.error(\"Database connection error:\", error);\r\n  }\r\n};\r\n\r\n// Handle GET and POST requests\r\nexport async function GET() {\r\n  await ConnectDB();\r\n\r\n  try {\r\n    const users = await UserModel.find();\r\n    return NextResponse.json({ success: true, data: users });\r\n  } catch (error) {\r\n    return NextResponse.json(\r\n      { success: false, message: \"Failed to fetch users\", error: error.message },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\nexport async function POST(req) {\r\n  await ConnectDB();\r\n\r\n  try {\r\n    const body = await req.json(); // Parse the JSON body\r\n    const { username, email, message } = body;\r\n\r\n    if (!username || !email || !message) {\r\n      return NextResponse.json(\r\n        { success: false, message: \"All fields are required\" },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    const newUser = new UserModel({ username, email, message });\r\n    await newUser.save();\r\n\r\n    return NextResponse.json({ success: true, data: newUser }, { status: 201 });\r\n  } catch (error) {\r\n    return NextResponse.json(\r\n      { success: false, message: \"Failed to create user\", error: error.message },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n"],"names":[],"mappings":"AAAA,yBAAyB;;;;;AAEzB;AACA;AACA;;;;AAEA,0BAA0B;AAC1B,MAAM,YAAY;IAChB,IAAI;QACF,MAAM,CAAA,GAAA,qIAAA,CAAA,UAAY,AAAD;QACjB,QAAQ,GAAG,CAAC;IACd,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,8BAA8B;IAC9C;AACF;AAGO,eAAe;IACpB,MAAM;IAEN,IAAI;QACF,MAAM,QAAQ,MAAM,uIAAA,CAAA,UAAS,CAAC,IAAI;QAClC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;YAAM,MAAM;QAAM;IACxD,EAAE,OAAO,OAAO;QACd,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,SAAS;YAAO,SAAS;YAAyB,OAAO,MAAM,OAAO;QAAC,GACzE;YAAE,QAAQ;QAAI;IAElB;AACF;AAEO,eAAe,KAAK,GAAG;IAC5B,MAAM;IAEN,IAAI;QACF,MAAM,OAAO,MAAM,IAAI,IAAI,IAAI,sBAAsB;QACrD,MAAM,EAAE,QAAQ,EAAE,KAAK,EAAE,OAAO,EAAE,GAAG;QAErC,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,SAAS;YACnC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,SAAS;gBAAO,SAAS;YAA0B,GACrD;gBAAE,QAAQ;YAAI;QAElB;QAEA,MAAM,UAAU,IAAI,uIAAA,CAAA,UAAS,CAAC;YAAE;YAAU;YAAO;QAAQ;QACzD,MAAM,QAAQ,IAAI;QAElB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;YAAM,MAAM;QAAQ,GAAG;YAAE,QAAQ;QAAI;IAC3E,EAAE,OAAO,OAAO;QACd,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,SAAS;YAAO,SAAS;YAAyB,OAAO,MAAM,OAAO;QAAC,GACzE;YAAE,QAAQ;QAAI;IAElB;AACF"}},
    {"offset": {"line": 178, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}